/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoadingImport } from './routes/loading'
import { Route as DebugXyflowImport } from './routes/debug-xyflow'
import { Route as IndexImport } from './routes/index'
import { Route as LearningSubjectIdImport } from './routes/learning/$subjectId'
import { Route as CalibrationSubjectIdImport } from './routes/calibration/$subjectId'
import { Route as LearningArticleArticleIdImport } from './routes/learning/article/$articleId'

// Create/Update Routes

const LoadingRoute = LoadingImport.update({
  id: '/loading',
  path: '/loading',
  getParentRoute: () => rootRoute,
} as any)

const DebugXyflowRoute = DebugXyflowImport.update({
  id: '/debug-xyflow',
  path: '/debug-xyflow',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LearningSubjectIdRoute = LearningSubjectIdImport.update({
  id: '/learning/$subjectId',
  path: '/learning/$subjectId',
  getParentRoute: () => rootRoute,
} as any)

const CalibrationSubjectIdRoute = CalibrationSubjectIdImport.update({
  id: '/calibration/$subjectId',
  path: '/calibration/$subjectId',
  getParentRoute: () => rootRoute,
} as any)

const LearningArticleArticleIdRoute = LearningArticleArticleIdImport.update({
  id: '/learning/article/$articleId',
  path: '/learning/article/$articleId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/debug-xyflow': {
      id: '/debug-xyflow'
      path: '/debug-xyflow'
      fullPath: '/debug-xyflow'
      preLoaderRoute: typeof DebugXyflowImport
      parentRoute: typeof rootRoute
    }
    '/loading': {
      id: '/loading'
      path: '/loading'
      fullPath: '/loading'
      preLoaderRoute: typeof LoadingImport
      parentRoute: typeof rootRoute
    }
    '/calibration/$subjectId': {
      id: '/calibration/$subjectId'
      path: '/calibration/$subjectId'
      fullPath: '/calibration/$subjectId'
      preLoaderRoute: typeof CalibrationSubjectIdImport
      parentRoute: typeof rootRoute
    }
    '/learning/$subjectId': {
      id: '/learning/$subjectId'
      path: '/learning/$subjectId'
      fullPath: '/learning/$subjectId'
      preLoaderRoute: typeof LearningSubjectIdImport
      parentRoute: typeof rootRoute
    }
    '/learning/article/$articleId': {
      id: '/learning/article/$articleId'
      path: '/learning/article/$articleId'
      fullPath: '/learning/article/$articleId'
      preLoaderRoute: typeof LearningArticleArticleIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/debug-xyflow': typeof DebugXyflowRoute
  '/loading': typeof LoadingRoute
  '/calibration/$subjectId': typeof CalibrationSubjectIdRoute
  '/learning/$subjectId': typeof LearningSubjectIdRoute
  '/learning/article/$articleId': typeof LearningArticleArticleIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/debug-xyflow': typeof DebugXyflowRoute
  '/loading': typeof LoadingRoute
  '/calibration/$subjectId': typeof CalibrationSubjectIdRoute
  '/learning/$subjectId': typeof LearningSubjectIdRoute
  '/learning/article/$articleId': typeof LearningArticleArticleIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/debug-xyflow': typeof DebugXyflowRoute
  '/loading': typeof LoadingRoute
  '/calibration/$subjectId': typeof CalibrationSubjectIdRoute
  '/learning/$subjectId': typeof LearningSubjectIdRoute
  '/learning/article/$articleId': typeof LearningArticleArticleIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/debug-xyflow'
    | '/loading'
    | '/calibration/$subjectId'
    | '/learning/$subjectId'
    | '/learning/article/$articleId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/debug-xyflow'
    | '/loading'
    | '/calibration/$subjectId'
    | '/learning/$subjectId'
    | '/learning/article/$articleId'
  id:
    | '__root__'
    | '/'
    | '/debug-xyflow'
    | '/loading'
    | '/calibration/$subjectId'
    | '/learning/$subjectId'
    | '/learning/article/$articleId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DebugXyflowRoute: typeof DebugXyflowRoute
  LoadingRoute: typeof LoadingRoute
  CalibrationSubjectIdRoute: typeof CalibrationSubjectIdRoute
  LearningSubjectIdRoute: typeof LearningSubjectIdRoute
  LearningArticleArticleIdRoute: typeof LearningArticleArticleIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DebugXyflowRoute: DebugXyflowRoute,
  LoadingRoute: LoadingRoute,
  CalibrationSubjectIdRoute: CalibrationSubjectIdRoute,
  LearningSubjectIdRoute: LearningSubjectIdRoute,
  LearningArticleArticleIdRoute: LearningArticleArticleIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/debug-xyflow",
        "/loading",
        "/calibration/$subjectId",
        "/learning/$subjectId",
        "/learning/article/$articleId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/debug-xyflow": {
      "filePath": "debug-xyflow.tsx"
    },
    "/loading": {
      "filePath": "loading.tsx"
    },
    "/calibration/$subjectId": {
      "filePath": "calibration/$subjectId.tsx"
    },
    "/learning/$subjectId": {
      "filePath": "learning/$subjectId.tsx"
    },
    "/learning/article/$articleId": {
      "filePath": "learning/article/$articleId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
