/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as StaticChatImport } from './routes/static-chat'
import { Route as StaticImport } from './routes/static'
import { Route as PillTestImport } from './routes/pill-test'
import { Route as LoadingImport } from './routes/loading'
import { Route as KnowledgeNodesImport } from './routes/knowledge-nodes'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const StaticChatRoute = StaticChatImport.update({
  id: '/static-chat',
  path: '/static-chat',
  getParentRoute: () => rootRoute,
} as any)

const StaticRoute = StaticImport.update({
  id: '/static',
  path: '/static',
  getParentRoute: () => rootRoute,
} as any)

const PillTestRoute = PillTestImport.update({
  id: '/pill-test',
  path: '/pill-test',
  getParentRoute: () => rootRoute,
} as any)

const LoadingRoute = LoadingImport.update({
  id: '/loading',
  path: '/loading',
  getParentRoute: () => rootRoute,
} as any)

const KnowledgeNodesRoute = KnowledgeNodesImport.update({
  id: '/knowledge-nodes',
  path: '/knowledge-nodes',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/knowledge-nodes': {
      id: '/knowledge-nodes'
      path: '/knowledge-nodes'
      fullPath: '/knowledge-nodes'
      preLoaderRoute: typeof KnowledgeNodesImport
      parentRoute: typeof rootRoute
    }
    '/loading': {
      id: '/loading'
      path: '/loading'
      fullPath: '/loading'
      preLoaderRoute: typeof LoadingImport
      parentRoute: typeof rootRoute
    }
    '/pill-test': {
      id: '/pill-test'
      path: '/pill-test'
      fullPath: '/pill-test'
      preLoaderRoute: typeof PillTestImport
      parentRoute: typeof rootRoute
    }
    '/static': {
      id: '/static'
      path: '/static'
      fullPath: '/static'
      preLoaderRoute: typeof StaticImport
      parentRoute: typeof rootRoute
    }
    '/static-chat': {
      id: '/static-chat'
      path: '/static-chat'
      fullPath: '/static-chat'
      preLoaderRoute: typeof StaticChatImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/knowledge-nodes': typeof KnowledgeNodesRoute
  '/loading': typeof LoadingRoute
  '/pill-test': typeof PillTestRoute
  '/static': typeof StaticRoute
  '/static-chat': typeof StaticChatRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/knowledge-nodes': typeof KnowledgeNodesRoute
  '/loading': typeof LoadingRoute
  '/pill-test': typeof PillTestRoute
  '/static': typeof StaticRoute
  '/static-chat': typeof StaticChatRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/knowledge-nodes': typeof KnowledgeNodesRoute
  '/loading': typeof LoadingRoute
  '/pill-test': typeof PillTestRoute
  '/static': typeof StaticRoute
  '/static-chat': typeof StaticChatRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/knowledge-nodes'
    | '/loading'
    | '/pill-test'
    | '/static'
    | '/static-chat'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/knowledge-nodes'
    | '/loading'
    | '/pill-test'
    | '/static'
    | '/static-chat'
  id:
    | '__root__'
    | '/'
    | '/knowledge-nodes'
    | '/loading'
    | '/pill-test'
    | '/static'
    | '/static-chat'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  KnowledgeNodesRoute: typeof KnowledgeNodesRoute
  LoadingRoute: typeof LoadingRoute
  PillTestRoute: typeof PillTestRoute
  StaticRoute: typeof StaticRoute
  StaticChatRoute: typeof StaticChatRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  KnowledgeNodesRoute: KnowledgeNodesRoute,
  LoadingRoute: LoadingRoute,
  PillTestRoute: PillTestRoute,
  StaticRoute: StaticRoute,
  StaticChatRoute: StaticChatRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/knowledge-nodes",
        "/loading",
        "/pill-test",
        "/static",
        "/static-chat"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/knowledge-nodes": {
      "filePath": "knowledge-nodes.tsx"
    },
    "/loading": {
      "filePath": "loading.tsx"
    },
    "/pill-test": {
      "filePath": "pill-test.tsx"
    },
    "/static": {
      "filePath": "static.tsx"
    },
    "/static-chat": {
      "filePath": "static-chat.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
